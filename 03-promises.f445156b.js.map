{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA6BA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CArCAQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAyBC,GACvBA,EAAMC,iBACN,MAAMC,EAAeF,EAAMG,cAAcC,SACzC,IAAIC,GAAcH,EAAab,MAAMiB,MACrC,MAAMC,GAAaL,EAAaM,KAAKF,MAC/BG,GAAcP,EAAaQ,OAAOJ,MAExC,IAAK,IAAIE,EAAO,EAAGA,GAAQC,EAAYD,IACrCrB,EAAcqB,EAAMH,GACjBM,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MACjBuB,EAAA3B,GAAS4B,OAAOC,QACd,uBAAqB1B,QAAiBC,MAAU,IAGnD0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBuB,EAAA3B,GAAS4B,OAAOG,QACd,sBAAoB5B,QAAeC,MAAU,IAGnDgB,GAAcE,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onPromiseCreate);\n\nfunction onPromiseCreate(event) {\n  event.preventDefault();\n  const formElements = event.currentTarget.elements;\n  let firstDelay = +formElements.delay.value;\n  const stepDelay = +formElements.step.value;\n  const amountStep = +formElements.amount.value;\n\n  for (let step = 1; step <= amountStep; step++) {\n    createPromise(step, firstDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    firstDelay += stepDelay;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","formElements","currentTarget","elements","firstDelay","value","stepDelay","step","amountStep","amount","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.f445156b.js.map"}